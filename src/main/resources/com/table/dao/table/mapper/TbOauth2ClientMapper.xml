<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.table.dao.table.mapper.TbOauth2ClientMapper">
  <resultMap id="BaseResultMap" type="com.table.dao.table.entity.TbOauth2Client">
    <id column="tb_oauth2_id" jdbcType="VARCHAR" property="tbOauth2Id" />
    <result column="tb_oauth2_client_name" jdbcType="VARCHAR" property="tbOauth2ClientName" />
    <result column="tb_oauth2_client_id" jdbcType="VARCHAR" property="tbOauth2ClientId" />
    <result column="tb_oauth2_client_secret" jdbcType="VARCHAR" property="tbOauth2ClientSecret" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    tb_oauth2_id, tb_oauth2_client_name, tb_oauth2_client_id, tb_oauth2_client_secret
  </sql>
  <select id="selectByExample" parameterType="com.table.dao.table.entity.TbOauth2ClientExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_oauth2_client
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_oauth2_client
    where tb_oauth2_id = #{tbOauth2Id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_oauth2_client
    where tb_oauth2_id = #{tbOauth2Id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.table.dao.table.entity.TbOauth2ClientExample">
    delete from tb_oauth2_client
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.table.dao.table.entity.TbOauth2Client">
    insert into tb_oauth2_client (tb_oauth2_id, tb_oauth2_client_name, tb_oauth2_client_id, 
      tb_oauth2_client_secret)
    values (#{tbOauth2Id,jdbcType=VARCHAR}, #{tbOauth2ClientName,jdbcType=VARCHAR}, #{tbOauth2ClientId,jdbcType=VARCHAR}, 
      #{tbOauth2ClientSecret,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.table.dao.table.entity.TbOauth2Client">
    insert into tb_oauth2_client
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tbOauth2Id != null">
        tb_oauth2_id,
      </if>
      <if test="tbOauth2ClientName != null">
        tb_oauth2_client_name,
      </if>
      <if test="tbOauth2ClientId != null">
        tb_oauth2_client_id,
      </if>
      <if test="tbOauth2ClientSecret != null">
        tb_oauth2_client_secret,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tbOauth2Id != null">
        #{tbOauth2Id,jdbcType=VARCHAR},
      </if>
      <if test="tbOauth2ClientName != null">
        #{tbOauth2ClientName,jdbcType=VARCHAR},
      </if>
      <if test="tbOauth2ClientId != null">
        #{tbOauth2ClientId,jdbcType=VARCHAR},
      </if>
      <if test="tbOauth2ClientSecret != null">
        #{tbOauth2ClientSecret,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.table.dao.table.entity.TbOauth2ClientExample" resultType="java.lang.Long">
    select count(*) from tb_oauth2_client
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_oauth2_client
    <set>
      <if test="record.tbOauth2Id != null">
        tb_oauth2_id = #{record.tbOauth2Id,jdbcType=VARCHAR},
      </if>
      <if test="record.tbOauth2ClientName != null">
        tb_oauth2_client_name = #{record.tbOauth2ClientName,jdbcType=VARCHAR},
      </if>
      <if test="record.tbOauth2ClientId != null">
        tb_oauth2_client_id = #{record.tbOauth2ClientId,jdbcType=VARCHAR},
      </if>
      <if test="record.tbOauth2ClientSecret != null">
        tb_oauth2_client_secret = #{record.tbOauth2ClientSecret,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_oauth2_client
    set tb_oauth2_id = #{record.tbOauth2Id,jdbcType=VARCHAR},
      tb_oauth2_client_name = #{record.tbOauth2ClientName,jdbcType=VARCHAR},
      tb_oauth2_client_id = #{record.tbOauth2ClientId,jdbcType=VARCHAR},
      tb_oauth2_client_secret = #{record.tbOauth2ClientSecret,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.table.dao.table.entity.TbOauth2Client">
    update tb_oauth2_client
    <set>
      <if test="tbOauth2ClientName != null">
        tb_oauth2_client_name = #{tbOauth2ClientName,jdbcType=VARCHAR},
      </if>
      <if test="tbOauth2ClientId != null">
        tb_oauth2_client_id = #{tbOauth2ClientId,jdbcType=VARCHAR},
      </if>
      <if test="tbOauth2ClientSecret != null">
        tb_oauth2_client_secret = #{tbOauth2ClientSecret,jdbcType=VARCHAR},
      </if>
    </set>
    where tb_oauth2_id = #{tbOauth2Id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.table.dao.table.entity.TbOauth2Client">
    update tb_oauth2_client
    set tb_oauth2_client_name = #{tbOauth2ClientName,jdbcType=VARCHAR},
      tb_oauth2_client_id = #{tbOauth2ClientId,jdbcType=VARCHAR},
      tb_oauth2_client_secret = #{tbOauth2ClientSecret,jdbcType=VARCHAR}
    where tb_oauth2_id = #{tbOauth2Id,jdbcType=VARCHAR}
  </update>
</mapper>